@use '../../styles/variables' as *;
@use '../../styles/mixins' as mixins;

// TODO: можно цвета вынести в переменные, но не обязательно

.page {
  display: flex;
  align-items: stretch;

  // background-color: $full-black;
  // color: #a5a5a5;
  background-color: var(--background, $full-black);
  // Такой цвет для fallback'а выбран, чтобы выделить ошибку,
  // потому что при нормальной работе fallback не используется
  color: var(--foreground, #ff5e5e);

  min-height: 100svh;
  padding: 30px;

  font-size: 36px;
  line-height: 1.2;
  font-family: var(--font-alkalami);

  @include mixins.responsive('lg') {
    padding: 20px;
    font-size: 30px;
  }

  @include mixins.responsive('md') {
    padding: 10px;
    font-size: 24px;
  }

  @include mixins.responsive('lg-height') {
    padding: 10px;
    font-size: 24px;
  }
}

.dark {
  --background: #000000;
  --foreground: #a5a5a5;
}

.light {
  --background: #fef0d3;
  --foreground: #000000;
}

.main {
  --base-padding: 10px;
  --grid-column-gap: 10px;
  width: 100%;
  display: grid;
  grid-auto-flow: column;
  grid-template-rows: 1fr 160px 1fr;
  grid-template-columns: 1fr 1fr 1fr;
  align-items: center;
  justify-items: center;
  column-gap: var(--grid-column-gap);

  @include mixins.responsive('md') {
    grid-template-rows: 1fr 140px 1fr;
  }

  @include mixins.responsive('sm') {
    grid-template-rows: 1fr 130px 1fr;
  }

  @include mixins.responsive('lg-height') {
    grid-template-rows: 1fr 130px 1fr;
  }

  @include mixins.responsive('md-height') {
    grid-template-rows: 1fr 120px 1fr;
  }

  // К сожалению, такое странное решение обусловлено большой сложностью динамической замены
  // цвета в рамке. Это особенность реализации рамки, поэтому приходится использовать отдельные классы
  &.darkThemeDashedBorder {
    @include mixins.custom-dashed-border(2px, $full-red, var(--base-padding));
  }

  &.lightThemeDashedBorder {
    @include mixins.custom-dashed-border(2px, $full-black, var(--base-padding));
  }
}

.themeButton {
  align-self: flex-start;
  justify-self: flex-start;
  background: none;
  border: none;
  font-size: 0;
  cursor: pointer;

  &:focus-visible {
    outline: 2px dashed var(--foreground);
    outline-offset: 1px;
  }
}

.themeIcon {
  @include mixins.responsive('sm') {
    width: 40px;
    height: 40px;
  }
}

.playerWidgets {
  grid-row: 3;

  @include mixins.responsive('sm') {
    grid-column: 3;
  }
}

.playerField {
  grid-row: 3;
  grid-column: 2;
}

.gameResultContainer {
  display: flex;
  flex-direction: column;
  row-gap: 5px;
  align-items: center;
  grid-row: 2;
  grid-column: 2;
  // Второй вариант - растянуть этот блок:
  // grid-column: 1 / 4;
  .message {
    text-align: center;
  }
  .restartButton {
    font-family: inherit;
    height: 58px;
    font-size: inherit;
    border: 3px solid $full-black;
    color: $full-black;
    background-color: #c23d3d;
    text-align: center;
    padding: 0px 24px;

    @include mixins.responsive('lg') {
      height: 54px;
    }

    @include mixins.responsive('md') {
      height: 46px;
    }

    @include mixins.responsive('lg-height') {
      height: 46px;
    }

    &:hover {
      cursor: pointer;
      background-color: #a73535;
    }

    &:focus-visible {
      outline: 2px dashed var(--foreground);
      outline-offset: 1px;
    }
  }
}

.hidden {
  visibility: hidden;
}

.botField {
  grid-row: 1;
  grid-column: 2;

  // Здесь те же трудности работы с пунктирной рамкой
  // Задаём её в стилях страницы, потому что на странице есть информация о выбранной
  // цветовой теме
  // P.S. В самом компоненте поля уже задана стандартная рамка, но её можно переопределить
  &.darkThemeDashedBorder {
    @include mixins.custom-dashed-border(4px, rgb(130, 130, 130), 5px);
  }

  &.lightThemeDashedBorder {
    @include mixins.custom-dashed-border(4px, rgb(91, 173, 137), 5px);
  }
}

.botWidgets {
  grid-row: 1;
  grid-column: 3;

  // Стандартный цвет описан в самом компоненте,
  // а здесь задаётся нужный цвет для цветовой темы страницы
  // Цвет доски в тёмной теме может совпадать со стандартным цветом, но не обязан
  // P.S. в компоненте виджетов стандартный стиль доски - стиль в тёмной теме,
  // поэтому его можно повторно не определять,
  // но для большего контроля и ясности всё же желательно это сделать
  &.light {
    --board-main-color: #386752;
    --board-border-color: #57a080;
    --board-shadow-color: #305545;
  }
  &.dark {
    --board-main-color: #5e5e5e;
    --board-border-color: #8a8a8a;
    --board-shadow-color: #5b5b5b;
  }
}
